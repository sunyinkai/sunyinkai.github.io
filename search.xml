<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[CF891A Pride]]></title>
      <url>/2018/02/23/CF891A/</url>
      <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>A. Pride</p>
<p>You have an array <em>a</em> with length <em>n</em>, you can perform operations. Each operation is like this: choose two adjacent elements from <em>a</em>, say <em>x</em> and <em>y</em>, and replace one of them with <em>gcd</em>(<em>x</em>, <em>y</em>), where <em>gcd</em> denotes the <a href="https://en.wikipedia.org/wiki/Greatest_common_divisor" target="_blank" rel="noopener">greatest common divisor</a>.</p>
<p>What is the minimum number of operations you need to make all of the elements equal to 1?</p>
<p>Input</p>
<p>The first line of the input contains one integer <em>n</em> (1 ≤ <em>n</em> ≤ 2000) — the number of elements in the array.</p>
<p>The second line contains <em>n</em> space separated integers <em>a</em>1, <em>a</em>2, …, <em>an</em> (1 ≤ <em>ai</em> ≤ 109) — the elements of the array.</p>
<p>Output</p>
<p>Print -1, if it is impossible to turn all numbers to 1. Otherwise, print the minimum number of operations needed to make all numbers equal to 1.</p>
<p>Examples</p>
<p>Copy</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">2 2 3 4 6</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>Copy</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2 4 6 8</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure>
<p>Copy</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2 6 9</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><ul>
<li>如果有x个1,那么显然答案为n-x</li>
<li>如果没有1,考虑最少需要多少操作弄出一个1来,考虑到gcd(x,y)赋值给y更好,因为gcd(x,y)已经少了一些因子,然后问题就转化为求最短的区间使得gcd(L,R)为1.<strong>gcd(L,R+1)=gcd(gcd(L,R),a[R+1]))</strong>可以O(n^2)求出所有区间的gcd值.</li>
<li>另外这种枚举的方式我觉得挺妙的</li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> min(a,b) (a&lt;b?a:b)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN][MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> cnt1=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][i]);</span><br><span class="line">		<span class="keyword">if</span>(a[i][i]==<span class="number">1</span>)++cnt1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(cnt1!=<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-cnt1);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;++j)&#123;</span><br><span class="line">			a[i][j]=gcd(a[i][j<span class="number">-1</span>],a[j][j]);</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]==<span class="number">1</span>)ans=min(ans,j-i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans==INF)<span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n<span class="number">-1</span>+ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF938C]]></title>
      <url>/2018/02/21/CF938C/</url>
      <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>Let’s denote a <em>m</em>-free matrix as a binary (that is, consisting of only 1’s and 0’s) matrix such that every square submatrix of size <em>m</em> × <em>m</em> of this matrix contains at least one zero.</p>
<p>Consider the following problem:</p>
<p>You are given two integers <em>n</em> and <em>m</em>. You have to construct an <em>m</em>-free square matrix of size <em>n</em> × <em>n</em> such that the number of 1’s in this matrix is maximum possible. Print the maximum possible number of 1’s in such matrix.</p>
<p>You don’t have to solve this problem. Instead, you have to construct a few tests for it.</p>
<p>You will be given <em>t</em> numbers <em>x</em>1, <em>x</em>2, …, $x_t$. For every <img src="http://codeforces.com/predownloaded/43/f1/43f1e11898ef657b1c1c02e1ae7b954c5230a2d9.png" alt="img">, find two integers <em>n</em> and <em>m</em> (<em>n</em> ≥ <em>m</em>) such that the answer for the aforementioned problem is exactly <em>x</em> .</p>
<p>Input</p>
<p>The first line contains one integer <em>t</em> (1 ≤ <em>t</em> ≤ 100) — the number of tests you have to construct.</p>
<p>Then <em>t</em> lines follow, <em>i</em>-th line containing one integer <em>x</em> (0 ≤ <em>x</em> ≤ $10^9$).</p>
<p>Output</p>
<p>For each test you have to construct, output two positive numbers <em>n</em> and <em>m</em> (1 ≤ <em>m</em>≤ <em>n</em> ≤ 10^9) such that the maximum number of 1’s in a <em>m</em>-free <em>n</em> × <em>n</em> matrix is exactly <em>x</em>. If there are multiple solutions, you may output any of them; and if this is impossible to construct a test, output a single integer  - 1.</p>
<p>Example</p>
<p>input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">21</span><br><span class="line">0</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br><span class="line">1 1</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>
<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p>不难发现对于每一个子阵,总是最右下方的那个地方置为0最合适,因为这样的<strong>潜力</strong>最大.</p>
<p>问题转化为是否存在n,m使得$n^2$-$[n/m]^2$=x.</p>
<p>既是 $a^2-b^2=C $</p>
<p>转化一下 $ (a+b)(a-b)=C$</p>
<p>然后再分解因子搞一搞就可以了.</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(((s+t)&amp;<span class="number">1</span>)||((s-t)&amp;<span class="number">1</span>))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	n=(s+t)/<span class="number">2</span>;</span><br><span class="line">	<span class="comment">//printf("n=%d\n",n);</span></span><br><span class="line">	<span class="keyword">if</span>(n&gt;INF||n&lt;<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">int</span> tmp=(s-t)/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(n/i&lt;tmp||n/i&lt;<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(n/i==tmp)&#123;</span><br><span class="line">			m=i;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="keyword">int</span> x;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">		<span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"1 1\n"</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">bool</span> tag=<span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=x;++i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;judge(i,x/i))&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n,m);</span><br><span class="line">				tag=<span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!tag)<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 思维 </tag>
            
            <tag> CF CDE </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CF909E Coprocessor]]></title>
      <url>/2018/02/11/CF909E/</url>
      <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h4><p>You are given a program you want to execute as a set of tasks organized in a dependency graph. The dependency graph is a directed acyclic graph: each task can depend on results of one or several other tasks, and there are no directed circular dependencies between tasks. A task can only be executed if all tasks it depends on have already completed.</p>
<p>Some of the tasks in the graph can only be executed on a coprocessor, and the rest can only be executed on the main processor. In one coprocessor call you can send it a set of tasks which can only be executed on it. For each task of the set, all tasks on which it depends must be either already completed or be included in the set. The main processor starts the program execution and gets the results of tasks executed on the coprocessor automatically.</p>
<p>Find the minimal number of coprocessor calls which are necessary to execute the given program.</p>
<p>Input</p>
<p>The first line contains two space-separated integers <em>N</em> (1 ≤ <em>N</em> ≤ $10^5$) — the total number of tasks given, and <em>M</em> (0 ≤ <em>M</em> ≤ $10^5$) — the total number of dependencies between tasks.</p>
<p>The next line contains <em>N</em> space-separated integers <img src="http://codeforces.com/predownloaded/9b/23/9b230264d053f4d67fc85fa445cd108b8120528f.png" alt="img">. If $E_i​$= 0, task <em>i</em> can only be executed on the main processor, otherwise it can only be executed on the coprocessor.</p>
<p>The next <em>M</em> lines describe the dependencies between tasks. Each line contains two space-separated integers <em>T</em>1 and <em>T</em>2 and means that task <em>T</em>1 depends on task <em>T</em>2 (<em>T</em>1 ≠ <em>T</em>2). Tasks are indexed from 0 to <em>N</em> - 1. All <em>M</em> pairs (<em>T</em>1, <em>T</em>2) are distinct. It is guaranteed that there are no circular dependencies between tasks.</p>
<p>Output</p>
<p>Output one line containing an integer — the minimal number of coprocessor calls necessary to execute the program.</p>
<p>Examples</p>
<p>input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">0 1 0 1</span><br><span class="line">0 1</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<p>input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">1 1 1 0</span><br><span class="line">0 1</span><br><span class="line">0 2</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure>
<p>output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>其实思路还是比较好想的,肯定是要从入度为0的点入手.</p>
<p><strong><del>solution 1</del></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">我们不难想到这样一个策略,从入度为0的点入手,如果当前处理的是0,那么res+1,否则一直继续.</span><br><span class="line">然后WA3.</span><br><span class="line">那么我们考虑这样一组数据:</span><br><span class="line">5 4</span><br><span class="line">1 1 0 1 0</span><br><span class="line">0 1</span><br><span class="line">0 2</span><br><span class="line">0 3</span><br><span class="line">0 4</span><br><span class="line">显然不正确,原来是没有考虑顺序,我们先拿0,再拿1不就可以了么.</span><br></pre></td></tr></table></figure>
<p>  <strong><del>solution 2</del></strong>  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">然后依然WA3.</span><br><span class="line">我们考虑这样一组数据:</span><br><span class="line">5 3</span><br><span class="line">0 1 0 1 0</span><br><span class="line">1 0</span><br><span class="line">2 1</span><br><span class="line">4 3</span><br><span class="line">也不正确</span><br></pre></td></tr></table></figure>
<p><strong>solution</strong></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">我们维护两个入读为<span class="number">0</span>的队列分别存值为<span class="number">0</span>的点和值为<span class="number">1</span>的点,我们先把度为<span class="number">0</span>的点的队列拿光后,再把度为<span class="number">1</span>的点的队列中点拿光,这样一直做下去就可以了.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXV=<span class="number">1e5</span>+<span class="number">7</span>,MAXE=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> to,next;</span><br><span class="line">&#125;es[MAXE];</span><br><span class="line"><span class="keyword">int</span> head[MAXV],tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	tot=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	es[tot].to=b;</span><br><span class="line">	es[tot].next=head[a];</span><br><span class="line">	head[a]=tot++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num[MAXV],in[MAXV];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> V,E;<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;V,&amp;E);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V;++i)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num[i]);</span><br><span class="line">	init();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;E;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b;<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">		addEdge(b,a);</span><br><span class="line">		in[a]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q1,q2;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(in[i]==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(num[i]==<span class="number">0</span>)q1.push(i);</span><br><span class="line">			<span class="keyword">else</span> q2.push(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt=V;</span><br><span class="line">	<span class="keyword">while</span>(cnt)&#123;</span><br><span class="line">		<span class="keyword">while</span>(!q1.empty())&#123;</span><br><span class="line">			<span class="keyword">int</span> no=q1.front();q1.pop();</span><br><span class="line">			--cnt;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=head[no];~i;i=es[i].next)&#123;</span><br><span class="line">				<span class="keyword">int</span> v=es[i].to;</span><br><span class="line">				in[v]--;</span><br><span class="line">				<span class="keyword">if</span>(in[v]==<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">if</span>(num[v]==<span class="number">0</span>)q1.push(v);</span><br><span class="line">					<span class="keyword">else</span> q2.push(v);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">while</span>(!q2.empty())&#123;</span><br><span class="line">			<span class="keyword">int</span> no=q2.front();q2.pop();</span><br><span class="line">			--cnt;</span><br><span class="line">			flag=<span class="literal">true</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=head[no];~i;i=es[i].next)&#123;</span><br><span class="line">				<span class="keyword">int</span> v=es[i].to;</span><br><span class="line">				in[v]--;</span><br><span class="line">				<span class="keyword">if</span>(in[v]==<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">if</span>(num[v]==<span class="number">0</span>)q1.push(v);</span><br><span class="line">					<span class="keyword">else</span> q2.push(v);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag)++res;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> topo排序 </tag>
            
            <tag> CF CDE </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
